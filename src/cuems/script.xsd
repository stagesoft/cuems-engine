<?xml version="1.0" encoding="utf-8" ?>
<xs:schema targetNamespace="http://stagelab.net/cuems"
  xmlns:xs="http://www.w3.org/2001/XMLSchema"
  xmlns="http://stagelab.net/cuems">
  <!-- The main capsule to make it a whole, named CueMs -->
  <xs:element name="CueMs">
    <xs:complexType>
      <xs:sequence>
        <!-- Our main object the script-->
        <xs:element name="CuemsScript" minOccurs="1" maxOccurs="1">
          <xs:complexType>
            <!-- Which is a sequence of one of each of these objects -->
            <xs:sequence minOccurs="1" maxOccurs="1">
              <!-- The uuid, TODO specify the uuid format in a type -->
              <xs:element name="uuid" type="UuidType"/>
              <!-- The name, mainly a string, we can check lengths here too if desired -->
              <xs:element name="name" type="xs:string"/>
              <!-- The date, Todo specify the date formant in a type-->
              <xs:element name="date" type="DateType"/>
              <!-- The root cuelist of our project, mainly a cuelist at the root -->
              <xs:element name="CueList" type="CueListType" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>

  <!-- Our cuelist type -->
  <xs:complexType name="CueListType">
    <!-- Which contents un undefined number of the following thins in any order -->
    <!-- A type string indicator -->
    <xs:sequence>
      <!-- Timecode behaviour flag -->
      <xs:element name="timecode" type="xs:boolean" />
      <!-- Its time mark -->
      <xs:element name="time" type="CTimecodeType" />
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <!-- Can have any other cuelists, recursively -->
        <xs:element name="CueList" type="CueListType" />
        <!-- Can have any cues -->
        <xs:element name="Cue" type="CueType" />
        <!-- Can be also specific type cues -->
        <xs:element name="AudioCue" type="AudioCueType" />
        <xs:element name="DmxCue" type="DmxCueType" />
        <xs:element name="VideoCue" type="VideoCueType" />
      </xs:choice>
    </xs:sequence>
  </xs:complexType>

  <!-- Our generic cue type -->
  <xs:complexType name="CueType">
    <!-- Which will have a sequence of the followin items -->
    <xs:sequence>
      <!-- Its own uuid -->
      <xs:element name="uuid" type="UuidType" />
      <!-- Timecode behaviour flag -->
      <xs:element name="timecode" type="xs:boolean" />
      <!-- Its time mark -->
      <xs:element name="time" type="CTimecodeType" />
      <!-- A loop flag indicator -->
      <xs:element name="loop" type="xs:boolean" />
      <!-- A flag to indicate auto arming -->
      <xs:element name="init_arm" type="xs:boolean" />
      <!-- Execution options -->
      <xs:element name="exec_options" type="ExecOptionsType" />
    </xs:sequence>
  </xs:complexType>

  <!-- Our audio cue type-->
  <xs:complexType name="AudioCueType">
    <xs:complexContent>
      <xs:extension base="CueType">
        <xs:sequence>
          <!-- A media file path which can be none -->
          <xs:element name="media" type="xs:string" minOccurs="0" />
          <!-- A master volume starting value -->
          <xs:element name="master_vol" type="PercentType" default="100" />
          <!-- An outputs section -->
          <xs:element name="outputs" type="AudioOutputsType" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="VideoCueType">
    <xs:complexContent>
      <xs:extension base="CueType">
        <xs:sequence>
          <!-- A video media file path which can be none -->
          <xs:element name="media" type="xs:string" minOccurs="0" />
          <!-- Initial corners definitions -->
          <xs:element name="corners" type="VideoCornersType"></xs:element>
          <!-- An outputs section -->
          <xs:element name="outputs" type="VideoOutputsType" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="DmxCueType">
    <xs:complexContent>
      <xs:extension base="CueType">
        <xs:sequence>
          <!-- A dmx media file path which can be none -->
          <xs:element name="media" type="xs:string" minOccurs="0" />
          <!-- An outputs section -->
          <xs:element name="outputs" type="DmxOutputsType" />
          <!-- A DMX scene -->
          <xs:element name="dmx_scene" type="DmxSceneType" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:simpleType name="UuidType">
    <xs:restriction base="xs:string">
      <!-- TODO, specify correctly -->
      <!-- <xs:pattern value=""/>  -->
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="DateType">
    <xs:restriction base="xs:string">
      <!-- TODO, specify correctly -->
      <!-- <xs:pattern value=""/>  -->
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="TimecodeType">
    <xs:restriction base="xs:string">
      <xs:pattern value="[0-9]{2}:[0-9]{2}:[0-9]{2}:[0-9]{2}"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="CTimecodeType">
    <!-- Can be a timecode field or an empty NoneType field -->
    <xs:choice>
      <xs:element name="CTimecode" type="TimecodeType" />
      <xs:element name="NoneType" type="xs:string" />
    </xs:choice>
  </xs:complexType>

  <xs:complexType name="ExecOptionsType">
    <!-- Execution options for a cue or cuelist -->
    <xs:sequence minOccurs="1" maxOccurs="1">
      <xs:element name="prewait" type="TimecodeType" default="00:00:00:00" />
      <xs:element name="autofollow" type="xs:boolean" />
      <xs:element name="autocontinue" type="xs:boolean" />
      <xs:element name="postwait" type="TimecodeType" default="00:00:00:00" />
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="VideoCornersType">
    <!-- Specs of the four corners of a media to display -->
    <xs:choice minOccurs="0" maxOccurs="1">
      <xs:element name='UpperLeft' type="xs:float" default="0.0" />
      <xs:element name='UpperRight' type="xs:float" default="0.0" />
      <xs:element name='LowerLeft' type="xs:float" default="0.0" />
      <xs:element name='LowerRight' type="xs:float" default="0.0" />
    </xs:choice>
  </xs:complexType>

  <xs:simpleType name="PercentType">
    <!-- Integer from 0 to 100 -->
    <xs:restriction base="xs:integer">
      <xs:minInclusive value="0" />
      <xs:maxInclusive value="100" />
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="OutputsType">
    <!-- Main outputs section type to inherit from -->
    <xs:sequence>
      <xs:element name="id" type="xs:byte" minOccurs="1" maxOccurs="1"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="AudioOutputsType">
    <!-- Audio outputs type -->
    <xs:complexContent>
      <!-- Based on the generic outputs type -->
      <xs:extension base="OutputsType">
        <!-- Specify 1 to 10 virtual audio outputs -->
        <xs:sequence minOccurs="1" maxOccurs="10">
          <xs:element name="virtual_audio_device" type="xs:byte" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="VideoOutputsType">
    <!-- Video outputs type -->
    <xs:complexContent>
      <!-- Based on the generic outputs type -->
      <xs:extension base="OutputsType">
        <!-- Specify 1 to 10 virtual video outputs -->
        <xs:sequence minOccurs="1" maxOccurs="10">
          <xs:element name="virtual_video_device" type="xs:byte" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="DmxOutputsType">
    <!-- Dmx outputs type -->
    <xs:complexContent>
      <!-- Based on the generic outputs type -->
      <xs:extension base="OutputsType">
        <!-- Specify 1 to 10 virtual dmx outputs -->
        <xs:sequence minOccurs="1" maxOccurs="10">
          <xs:element name="virtual_dmx_device" type="xs:byte" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- Dmx basic channel type -->
  <xs:complexType name="DmxChannelType">
    <xs:simpleContent>
      <xs:extension base="xs:short">
        <xs:attribute type="xs:byte" name="id" use="optional"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <!-- Dmx universe type -->
  <xs:complexType name="DmxUniverseType">
    <xs:sequence>
      <!-- DMX allows a max of 512 different channels in a universe -->
      <xs:element name="DmxChannel" type="DmxChannelType" minOccurs="0" maxOccurs="512">
        <!-- They must be unique id's specs for the channels -->
        <xs:unique name="unique_channel_number">
          <xs:selector xpath="DmxChannel" />
          <xs:field xpath="@id" />
        </xs:unique>
      </xs:element>
    </xs:sequence>
    <xs:attribute type="xs:byte" name="id" use="optional"/>
  </xs:complexType>

  <!-- Dmx scene type -->
  <xs:complexType name="DmxSceneType">
    <xs:sequence>
      <!-- We allow a max of 10 universes un a scene by now -->
      <xs:element name="DmxUniverse" type="DmxUniverseType" minOccurs="0" maxOccurs="10">
        <!-- They must be unique id's specs for the channels -->
        <xs:unique name="unique_channel_universe">
          <xs:selector xpath="DmxUniverse" />
          <xs:field xpath="@id" />
        </xs:unique>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

</xs:schema>